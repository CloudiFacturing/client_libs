//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace AuthentificationWSDL.CMAuth {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AuthManagerPortBinding", Namespace="http://authmanager.sintef.no/")]
    public partial class AuthManager : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getEndpointOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSessionTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback validateSessionTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRolesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUsernameOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AuthManager() {
            this.Url = global::AuthentificationWSDL.Properties.Settings.Default.AuthentificationWSDL_CMAuth_AuthManager;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getEndpointCompletedEventHandler getEndpointCompleted;
        
        /// <remarks/>
        public event getProjectCompletedEventHandler getProjectCompleted;
        
        /// <remarks/>
        public event getSessionTokenCompletedEventHandler getSessionTokenCompleted;
        
        /// <remarks/>
        public event validateSessionTokenCompletedEventHandler validateSessionTokenCompleted;
        
        /// <remarks/>
        public event getRolesCompletedEventHandler getRolesCompleted;
        
        /// <remarks/>
        public event getUsernameCompletedEventHandler getUsernameCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://authmanager.sintef.no/", ResponseNamespace="http://authmanager.sintef.no/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getEndpoint(string sessionToken, string component) {
            object[] results = this.Invoke("getEndpoint", new object[] {
                        sessionToken,
                        component});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getEndpointAsync(string sessionToken, string component) {
            this.getEndpointAsync(sessionToken, component, null);
        }
        
        /// <remarks/>
        public void getEndpointAsync(string sessionToken, string component, object userState) {
            if ((this.getEndpointOperationCompleted == null)) {
                this.getEndpointOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEndpointOperationCompleted);
            }
            this.InvokeAsync("getEndpoint", new object[] {
                        sessionToken,
                        component}, this.getEndpointOperationCompleted, userState);
        }
        
        private void OngetEndpointOperationCompleted(object arg) {
            if ((this.getEndpointCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEndpointCompleted(this, new getEndpointCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://authmanager.sintef.no/", ResponseNamespace="http://authmanager.sintef.no/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getProject(string sessionToken) {
            object[] results = this.Invoke("getProject", new object[] {
                        sessionToken});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getProjectAsync(string sessionToken) {
            this.getProjectAsync(sessionToken, null);
        }
        
        /// <remarks/>
        public void getProjectAsync(string sessionToken, object userState) {
            if ((this.getProjectOperationCompleted == null)) {
                this.getProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProjectOperationCompleted);
            }
            this.InvokeAsync("getProject", new object[] {
                        sessionToken}, this.getProjectOperationCompleted, userState);
        }
        
        private void OngetProjectOperationCompleted(object arg) {
            if ((this.getProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProjectCompleted(this, new getProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://authmanager.sintef.no/", ResponseNamespace="http://authmanager.sintef.no/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getSessionToken(string username, string password, string project) {
            object[] results = this.Invoke("getSessionToken", new object[] {
                        username,
                        password,
                        project});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getSessionTokenAsync(string username, string password, string project) {
            this.getSessionTokenAsync(username, password, project, null);
        }
        
        /// <remarks/>
        public void getSessionTokenAsync(string username, string password, string project, object userState) {
            if ((this.getSessionTokenOperationCompleted == null)) {
                this.getSessionTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSessionTokenOperationCompleted);
            }
            this.InvokeAsync("getSessionToken", new object[] {
                        username,
                        password,
                        project}, this.getSessionTokenOperationCompleted, userState);
        }
        
        private void OngetSessionTokenOperationCompleted(object arg) {
            if ((this.getSessionTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSessionTokenCompleted(this, new getSessionTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://authmanager.sintef.no/", ResponseNamespace="http://authmanager.sintef.no/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool validateSessionToken(string sessionToken) {
            object[] results = this.Invoke("validateSessionToken", new object[] {
                        sessionToken});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void validateSessionTokenAsync(string sessionToken) {
            this.validateSessionTokenAsync(sessionToken, null);
        }
        
        /// <remarks/>
        public void validateSessionTokenAsync(string sessionToken, object userState) {
            if ((this.validateSessionTokenOperationCompleted == null)) {
                this.validateSessionTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnvalidateSessionTokenOperationCompleted);
            }
            this.InvokeAsync("validateSessionToken", new object[] {
                        sessionToken}, this.validateSessionTokenOperationCompleted, userState);
        }
        
        private void OnvalidateSessionTokenOperationCompleted(object arg) {
            if ((this.validateSessionTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.validateSessionTokenCompleted(this, new validateSessionTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://authmanager.sintef.no/", ResponseNamespace="http://authmanager.sintef.no/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] getRoles(string sessionToken) {
            object[] results = this.Invoke("getRoles", new object[] {
                        sessionToken});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getRolesAsync(string sessionToken) {
            this.getRolesAsync(sessionToken, null);
        }
        
        /// <remarks/>
        public void getRolesAsync(string sessionToken, object userState) {
            if ((this.getRolesOperationCompleted == null)) {
                this.getRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRolesOperationCompleted);
            }
            this.InvokeAsync("getRoles", new object[] {
                        sessionToken}, this.getRolesOperationCompleted, userState);
        }
        
        private void OngetRolesOperationCompleted(object arg) {
            if ((this.getRolesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRolesCompleted(this, new getRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://authmanager.sintef.no/", ResponseNamespace="http://authmanager.sintef.no/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getUsername(string sessionToken) {
            object[] results = this.Invoke("getUsername", new object[] {
                        sessionToken});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getUsernameAsync(string sessionToken) {
            this.getUsernameAsync(sessionToken, null);
        }
        
        /// <remarks/>
        public void getUsernameAsync(string sessionToken, object userState) {
            if ((this.getUsernameOperationCompleted == null)) {
                this.getUsernameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUsernameOperationCompleted);
            }
            this.InvokeAsync("getUsername", new object[] {
                        sessionToken}, this.getUsernameOperationCompleted, userState);
        }
        
        private void OngetUsernameOperationCompleted(object arg) {
            if ((this.getUsernameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUsernameCompleted(this, new getUsernameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getEndpointCompletedEventHandler(object sender, getEndpointCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEndpointCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEndpointCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getProjectCompletedEventHandler(object sender, getProjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getSessionTokenCompletedEventHandler(object sender, getSessionTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSessionTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSessionTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void validateSessionTokenCompletedEventHandler(object sender, validateSessionTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class validateSessionTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal validateSessionTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getRolesCompletedEventHandler(object sender, getRolesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getUsernameCompletedEventHandler(object sender, getUsernameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUsernameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUsernameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591